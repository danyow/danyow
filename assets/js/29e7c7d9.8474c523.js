"use strict";(self.webpackChunkdanyow=self.webpackChunkdanyow||[]).push([[7502],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,w=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(w,o(o({ref:t},s),{},{components:n})):a.createElement(w,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7348:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],c={},l="[VisionUtility][1].GetColorBlindSafePalette",u={unversionedId:"addressable",id:"addressable",title:"[VisionUtility][1].GetColorBlindSafePalette",description:"public static int GetColorBlindSafePalette (Color[] palette, float minimumLuminance, float maximumLuminance);",source:"@site/unity/addressable.md",sourceDirName:".",slug:"/addressable",permalink:"/unity/addressable",editUrl:"https://github.com/danyow/danyow/edit/main/unity/unity/addressable.md",tags:[],version:"current",lastUpdatedBy:"danyow",lastUpdatedAt:1647575340,formattedLastUpdatedAt:"2022/3/18",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UGUI",permalink:"/unity/UGUI"},next:{title:"\u52a8\u753b",permalink:"/unity/animation"}},s={},d=[{value:"\u53c2\u6570",id:"\u53c2\u6570",level:2},{value:"\u8fd4\u56de",id:"\u8fd4\u56de",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:2}],p={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"visionutilitygetcolorblindsafepalette"},(0,i.kt)("a",{parentName:"h1",href:"Accessibility.VisionUtility.md"},"VisionUtility"),".GetColorBlindSafePalette"),(0,i.kt)("p",null,"public static int GetColorBlindSafePalette (Color[] palette, float minimumLuminance, float maximumLuminance);"),(0,i.kt)("h2",{id:"\u53c2\u6570"},"\u53c2\u6570"),(0,i.kt)("p",null,"palette"),(0,i.kt)("p",null,"\u7528\u4e8e\u586b\u5145\u8c03\u8272\u677f\u7684\u989c\u8272\u7684\u6570\u7ec4\u3002"),(0,i.kt)("p",null,"minimumLuminance"),(0,i.kt)("p",null,"\u53ef\u5141\u8bb8\u7684\u6700\u5c0f\u611f\u77e5\u4eae\u5ea6\u4e3a 0 \u5230 1\u3002\u5bf9\u4e8e\u6df1\u8272\u80cc\u666f\uff0c\u5efa\u8bae\u4f7f\u7528 0.2 \u6216\u66f4\u5927\u503c\u3002"),(0,i.kt)("p",null,"maximumLuminance"),(0,i.kt)("p",null,"\u53ef\u5141\u8bb8\u7684\u6700\u5927\u611f\u77e5\u4eae\u5ea6\u4e3a 0 \u5230 1\u3002\u5bf9\u4e8e\u6d45\u8272\u80cc\u666f\uff0c\u5efa\u8bae\u4f7f\u7528 0.8 \u6216\u66f4\u5c0f\u503c\u3002"),(0,i.kt)("h2",{id:"\u8fd4\u56de"},"\u8fd4\u56de"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"int")," \u8c03\u8272\u677f\u4e2d\u660e\u786e\u7684\u989c\u8272\u7684\u6570\u91cf\u3002"),(0,i.kt)("h2",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.kt)("p",null,"\u83b7\u53d6\u5bf9\u4e8e\u6b63\u5e38\u89c6\u529b\u3001\u7eff\u8272\u76f2\u3001\u7ea2\u8272\u76f2\u548c\u84dd\u8272\u76f2\u6765\u8bb2\u5747\u53ef\u8fa8\u8bc6\u7684\u989c\u8272\u7684\u8c03\u8272\u677f\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/current/StaticFiles/ScriptRefImages/ColorBlindSafePaletteTable.png",alt:null})," ",(0,i.kt)("em",{parentName:"p"},"\u7ed8\u5236\u65f6\u4f7f\u7528\u7684\u4e00\u7ec4\u989c\u8272\u53ca\u5176\u611f\u77e5\u4eae\u5ea6\u503c\u3002")),(0,i.kt)("p",null,"\u5728\u5c06\u8c03\u8272\u677f\u4f20\u9012\u7ed9\u6b64\u65b9\u6cd5\u4e4b\u524d\u5148\u4e3a\u5176\u5206\u914d\u5927\u5c0f\uff0c\u4ee5\u6307\u5b9a\u6240\u9700\u7684\u989c\u8272\u6570\u91cf\u3002\u8fd4\u56de\u503c\u8868\u793a\u8c03\u8272\u677f\u4e2d\u6240\u542b\u660e\u786e\u7684\u989c\u8272\u7684\u6570\u91cf\u3002\u5982\u679c\u8be5\u503c\u5c0f\u4e8e\u8c03\u8272\u677f\u7684\u5927\u5c0f\uff0c\u5219\u8c03\u8272\u677f\u6309\u987a\u5e8f\u91cd\u590d\u989c\u8272\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/current/StaticFiles/ScriptRefImages/ColorBlindSafePalette.png",alt:null})," \u201c\u7528\u4e8e\u9884\u89c8\u6837\u672c\u7684\u7a97\u53e3\uff0c\u8fd9\u4e9b\u6837\u672c\u5728\u5927\u591a\u6570\u89c6\u89c9\u6761\u4ef6\u4e0b\u90fd\u5e94\u8be5\u53ef\u8fa8\u8bc6\u7684\u3002\u201d"),(0,i.kt)("p",null,"\u5c06\u4ee5\u4e0b\u811a\u672c\u4f5c\u4e3a ColorSwatchExample.cs \u6dfb\u52a0\u5230 Assets/Editor\uff0c\u5e76\u5bfc\u822a\u81f3\u83dc\u5355\u9009\u9879 Window > Color Swatch Example\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using [UnityEditor][2];\nusing UnityEngine;\nusing UnityEngine.Accessibility;  \n \npublic class ColorSwatchExample : [EditorWindow][3]\n{\n   // size of swatch background textures to generate\n   private const int k_SwatchTextureSize = 16;\n   // the maximum number of swatches for this example\n   private const int k_MaxPaletteSize = 10;  \n \n   [[MenuItem][4]("Window/[Color][5] Swatch Example")]\n   private static void CreateWindow()\n   {\n       var window = GetWindow<ColorSwatchExample>();\n       window.position = new [Rect][6](0f, 0f, 400f, 80f);\n   }  \n \n   // the background textures to use for the swatches\n   private [Texture2D][7][] m_SwatchBackgrounds = new [Texture2D][8][k_MaxPaletteSize];  \n \n   // the desired number of swatches\n   [[SerializeField][9]]\n   private int m_PaletteSize = 8;\n   // the range of desired luminance values\n   [[SerializeField][10]]\n   private [Vector2][11] m_DesiredLuminance = new [Vector2][12](0.2f, 0.9f);\n   // the colors obtained\n   [[SerializeField][13]]\n   private [Color][14][] m_Palette;\n   // the number of unique colors in the palette before they repeat\n   [[SerializeField][15]]\n   private int m_NumUniqueColors;  \n \n   // create swatch background textures when window first opens\n   protected virtual void OnEnable()\n   {\n       titleContent = new [GUIContent][16]("[Color][17] Swatches");  \n \n       // create background swatches with different patterns for repeated colors\n       m_SwatchBackgrounds[0] = CreateSwatchBackground(k_SwatchTextureSize, 0, 0);\n       m_SwatchBackgrounds[1] = CreateSwatchBackground(k_SwatchTextureSize, 1, 4);\n       m_SwatchBackgrounds[2] = CreateSwatchBackground(k_SwatchTextureSize, 1, 3);\n       m_SwatchBackgrounds[3] = CreateSwatchBackground(k_SwatchTextureSize, 6, 1);\n       m_SwatchBackgrounds[4] = CreateSwatchBackground(k_SwatchTextureSize, 4, 3);\n       m_SwatchBackgrounds[5] = CreateSwatchBackground(k_SwatchTextureSize, 6, 6);\n       m_SwatchBackgrounds[6] = CreateSwatchBackground(k_SwatchTextureSize, 4, 2);\n       m_SwatchBackgrounds[7] = CreateSwatchBackground(k_SwatchTextureSize, 6, 4);\n       m_SwatchBackgrounds[8] = CreateSwatchBackground(k_SwatchTextureSize, 2, 5);\n       m_SwatchBackgrounds[9] = CreateSwatchBackground(k_SwatchTextureSize, 1, 2);  \n \n       UpdatePalette();\n   }  \n \n   // clean up textures when window is closed\n   protected virtual void OnDisable()\n   {\n       for (int i = 0, count = m_SwatchBackgrounds.Length; i < count; ++i)\n           DestroyImmediate(m_SwatchBackgrounds[i]);\n   }  \n \n   protected virtual void OnGUI()\n   {\n       // input desired number of colors and luminance values\n       [EditorGUI.BeginChangeCheck][18]();  \n \n       m_PaletteSize = [EditorGUILayout.IntSlider][19]("Palette Size", m_PaletteSize, 0, k_MaxPaletteSize);  \n \n       float min = m_DesiredLuminance.x;\n       float max = m_DesiredLuminance.y;\n       [EditorGUILayout.MinMaxSlider][20]("Luminance [Range][21]", ref min, ref max, 0f, 1f);\n       m_DesiredLuminance = new [Vector2][22](min, max);  \n \n       if ([EditorGUI.EndChangeCheck][23]())\n       {\n           UpdatePalette();\n       }  \n \n       // display warning message if parameters are out of range\n       if (m_NumUniqueColors == 0)\n       {\n           string warningMessage = "Unable to generate any unique colors with the specified luminance requirements.";\n           [EditorGUILayout.HelpBox][24](warningMessage, [MessageType.Warning][25]);\n       }\n       // otherwise display swatches in a row\n       else\n       {\n           using (new [GUILayout.HorizontalScope][26]())\n           {\n               [GUILayout.FlexibleSpace][27]();\n               [Color][28] oldColor = [GUI.color][29];  \n \n               int swatchBackgroundIndex = 0;\n               for (int i = 0; i < m_PaletteSize; ++i)\n               {\n                   // change swatch background pattern when reaching a repeated color\n                   if (i > 0 && i % m_NumUniqueColors == 0)\n                       ++swatchBackgroundIndex;  \n \n                   [Rect][30] rect = [GUILayoutUtility.GetRect][31](k_SwatchTextureSize \\* 2, k_SwatchTextureSize \\* 2);\n                   rect.width = k_SwatchTextureSize \\* 2;  \n \n                   [GUI.color][32] = m_Palette[i];\n                   [GUI.DrawTexture][33](rect, m_SwatchBackgrounds[swatchBackgroundIndex], [ScaleMode.ScaleToFit][34], true);\n               }  \n \n               [GUI.color][35] = oldColor;\n               [GUILayout.FlexibleSpace][36]();\n           }\n       }\n   }  \n \n   // create a white texture with some pixels discarded to make a pattern\n   private [Texture2D][37] CreateSwatchBackground(int size, int discardPixelCount, int discardPixelStep)\n   {\n       var swatchBackground = new [Texture2D][38](size, size);\n       swatchBackground.hideFlags = [HideFlags.HideAndDontSave][39];\n       swatchBackground.filterMode = [FilterMode.Point][40];  \n \n       var pixels = swatchBackground.GetPixels32();\n       int counter = 0;\n       bool discard = false;\n       for (int i = 0, count = pixels.Length; i < count; ++i)\n       {\n           pixels[i] = new [Color32][41](255, 255, 255, (byte)(discard ? 0 : 255));\n           ++counter;\n           if (discard && counter == discardPixelCount)\n           {\n               discard = false;\n               counter = 0;\n           }\n           else if (!discard && counter == discardPixelStep)\n           {\n               discard = true;\n               counter = 0;\n           }\n       }\n       swatchBackground.SetPixels32(pixels);  \n \n       swatchBackground.Apply();\n       return swatchBackground;\n   }  \n \n   // request new palette\n   private void UpdatePalette()\n   {\n       m_Palette = new [Color][42][m_PaletteSize];\n       m_NumUniqueColors =\n           [VisionUtility.GetColorBlindSafePalette][43](m_Palette, m_DesiredLuminance.x, m_DesiredLuminance.y);\n   }\n}\n')))}m.isMDXComponent=!0}}]);